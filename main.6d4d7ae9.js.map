{"version":3,"sources":["scripts/main.js"],"names":["isWinner","tableRows","document","querySelectorAll","gameScore","querySelector","button","messageStart","messageLose","messageWin","matrix","createTable","reduce","arr","v","push","Array","children","length","fill","setNuberToEmptyCell","board","randomNumber","Math","random","x","parseInt","y","setValuesToBoard","forEach","row","cell","innerText","classList","add","checkChoseDirection","currentCell","nextCell","horizontallyReverse","reverse","groupMatrix","tmpBoard","map","_","i","clearBoard","nodeList","remove","clearMatrix","index","moveCells","emptyCellsCount","sumSameCells","score","curentCell","adjacentCell","newValue","addStyles","gameOver","checkForValue2048","table","some","includes","addEventListener","toggle","contains","e","key"],"mappings":"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","file":"main.6d4d7ae9.js","sourceRoot":"../src","sourcesContent":["\n'use strict';\n\nconst tableRows = document.querySelectorAll('tr');\nconst gameScore = document.querySelector('.game-score');\nconst button = document.querySelector('.button');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nlet isWinner;\n\nconst matrix = createTable();\n\nbutton.addEventListener('click', () => {\n  messageStart.classList.toggle('hidden');\n  messageLose.classList.add('hidden');\n\n  button.innerText = button.innerText === 'Start'\n    ? 'Restart' : 'Start';\n\n  button.classList.toggle('start', !button.classList.contains('start'));\n  button.classList.toggle('restart', !button.classList.contains('restart'));\n\n  if (button.innerText !== 'Restart') {\n    gameScore.innerText = 0;\n\n    if (isWinner) {\n      messageWin.classList.add('hidden');\n    };\n\n    clearBoard(tableRows);\n    clearMatrix();\n    isWinner = false;\n\n    return;\n  };\n\n  setNuberToEmptyCell(matrix);\n  setNuberToEmptyCell(matrix);\n\n  setValuesToBoard(matrix);\n});\n\ndocument.addEventListener('keydown', e => {\n  if (!['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key)\n    || isWinner) {\n    return;\n  };\n\n  if (['ArrowDown', 'ArrowUp'].includes(e.key)) {\n    groupMatrix(matrix);\n  };\n\n  if (['ArrowLeft', 'ArrowUp'].includes(e.key)) {\n    horizontallyReverse(matrix);\n  };\n\n  if (!checkChoseDirection(matrix)) {\n    return;\n  }\n\n  clearBoard(tableRows);\n  moveCells(matrix);\n  sumSameCells(matrix, gameScore);\n  moveCells(matrix);\n\n  if (['ArrowLeft', 'ArrowUp'].includes(e.key)) {\n    horizontallyReverse(matrix);\n  };\n\n  if (['ArrowDown', 'ArrowUp'].includes(e.key)) {\n    groupMatrix(matrix);\n  };\n  setNuberToEmptyCell(matrix);\n  setValuesToBoard(matrix);\n\n  addStyles();\n\n  if (gameOver(matrix)) {\n    messageLose.classList.remove('hidden');\n  }\n\n  if (checkForValue2048(matrix)) {\n    messageWin.classList.toggle('hidden');\n    isWinner = true;\n  }\n});\n\nfunction createTable() {\n  return [...tableRows].reduce((arr, v,) => {\n    arr.push(new Array(v.children.length).fill(false));\n\n    return arr;\n  }, []);\n};\n\nfunction setNuberToEmptyCell(board) {\n  const randomNumber = Math.random() > 0.9 ? 4 : 2;\n\n  while (true) {\n    const x = parseInt(Math.random() * 4);\n    const y = parseInt(Math.random() * 4);\n\n    if (!board[x][y]) {\n      board[x][y] = randomNumber;\n      break;\n    };\n  };\n};\n\nfunction setValuesToBoard(board) {\n  [...tableRows].forEach((row, x) => {\n    [...row.children].forEach((cell, y) => {\n      cell.innerText = board[x][y] || '';\n      cell.classList.add(`field-cell--${cell.innerText}`);\n    });\n  });\n};\n\nfunction checkChoseDirection(board) {\n  for (let x = 0; x < 4; x++) {\n    for (let y = 2; y >= 0; y--) {\n      const currentCell = board[x][y];\n      const nextCell = board[x][y + 1];\n      const withSameValue = currentCell === nextCell;\n\n      if ((currentCell && !nextCell) || (currentCell && withSameValue)) {\n        return true;\n      };\n    };\n  };\n};\n\nfunction horizontallyReverse(board) {\n  board.forEach((row) => row.reverse());\n};\n\nfunction groupMatrix(board) {\n  const tmpBoard = board.map((row, x) => {\n    return row.map((_, y) => board[y][x]);\n  });\n\n  tmpBoard.forEach((_, i) => {\n    board[i] = tmpBoard[i];\n  });\n};\n\nfunction clearBoard(nodeList) {\n  nodeList.forEach((row) => {\n    [...row.children].forEach((cell) => {\n      cell.classList.remove(`field-cell--${cell.innerText}`);\n      cell.innerText = '';\n    });\n  });\n};\n\nfunction clearMatrix() {\n  matrix.forEach(row => {\n    row.forEach((_, index) => {\n      row[index] = false;\n    });\n  });\n};\n\nfunction moveCells(board) {\n  for (let x = 0; x < board.length; x++) {\n    let emptyCellsCount = 0;\n\n    for (let y = 3; y >= 0; y--) {\n      if (!board[x][y]) {\n        emptyCellsCount++;\n        continue;\n      };\n\n      if (emptyCellsCount) {\n        board[x][y + emptyCellsCount] = board[x][y];\n        board[x][y] = false;\n      };\n    };\n  };\n};\n\nfunction sumSameCells(board, score) {\n  for (let x = 0; x < 4; x++) {\n    for (let y = 2; y >= 0; y--) {\n      const curentCell = board[x][y];\n      const adjacentCell = board[x][y + 1];\n      const isWithSameValue = adjacentCell === curentCell;\n\n      if (adjacentCell && isWithSameValue) {\n        const newValue = +adjacentCell + +curentCell;\n\n        score.innerText = +score.innerText + +newValue;\n\n        board[x][y + 1] = newValue;\n        board[x][y] = false;\n      };\n    };\n  };\n};\n\nfunction addStyles() {\n  tableRows.forEach(row => {\n    [...row.children].forEach(cell => {\n      if (cell.innerText) {\n        cell.classList.add(`field-cell--${cell.innerText}`);\n      };\n    });\n  });\n};\n\nfunction gameOver(board) {\n  for (let x = 0; x < board.length; x++) {\n    for (let y = 0; y < board.length; y++) {\n      const currentCell = board[x][y];\n\n      if (!currentCell) {\n        return false;\n      };\n\n      if (x !== board.length - 1 && board[x + 1][y] === currentCell) {\n        return false;\n      };\n\n      if (y !== board.length - 1 && board[x][y + 1] === currentCell) {\n        return false;\n      };\n    };\n  };\n\n  return true;\n};\n\nfunction checkForValue2048(table) {\n  return [...table].some(row => row.includes(2048));\n};\n"]}